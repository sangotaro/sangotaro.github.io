function handlePush(t){return self.registration.pushManager.getSubscription().then(function(t){var n="https://api.growthpush.com/1/trials?token="+getSubscriptionId(t)+"&applicationId="+_config.applicationId+"&secret="+_config.credentialId;return self.fetch(n).then(function(t){return 200!==t.status?Promise.reject("Status code isn't 200"):t.json().then(function(t){var n=null==t.extra?"":"#"+encodeURIComponent(t.extra);return self.registration.showNotification(_config.title,{icon:_config.icon+n,body:t.text,tag:"growthpush-trialId="+t.trialId,vibrate:t.sound?1e3:0})})})["catch"](function(t){})})}function handleNotificationClick(t){t.notification.close();var n={},e=t.notification.icon.match(/#(.+)/);return null!=e&&e.length>1&&(n=JSON.parse(decodeURIComponent(e[1]))),self.clients.openWindow&&"url"in n?self.clients.openWindow(n.url):self.clients.matchAll({type:"window"}).then(function(t){for(var n=0;n<t.length;n++){var e=t[n];if("/"===e.url&&"focus"in e)return e.focus()}return self.clients.openWindow?self.clients.openWindow("/"):void 0})}function sendClientEvent(){return self.fetch("https://api.growthpush.com/1/events",{method:"post",headers:{"Content-type":"application/x-www-form-urlencoded; charset=UTF-8"},body:"clientId="+_config.clientId+"&code="+_config.code+"&name="+_config.clickEventName}).then(function(t){return 200!==t.status?Promise.reject("Status code isn't 200"):t.json().then(function(t){})})["catch"](function(t){})}function getSubscriptionId(t){return null==t.subscriptionId?t.endpoint.split("/").pop():t.subscriptionId}var _config={};self.addEventListener("install",function(t){t.waitUntil(self.skipWaiting())}),self.addEventListener("activate",function(t){t.waitUntil(self.clients.claim())}),self.addEventListener("message",function(t){var n=JSON.parse(t.data);"config"===n.type&&(_config=n.data),t.ports[0].postMessage({})}),self.addEventListener("push",function(t){"https://api.growthpush.com/1/trials?token="+_config.subscriptionId+"&applicationId="+_config.applicationId+"&secret="+_config.credentialId;t.waitUntil(handlePush(t))}),self.addEventListener("notificationclick",function(t){t.waitUntil(handleNotificationClick(t).then(sendClientEvent))});